swagger: '2.0'
info:
  description: Confluent Kafka REST proxy
  version: 1.0.0
  title: Kafka REST proxy
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: '11.11.254.102:8082'
basePath: /
schemes:
  - http
tags:
  - name: topic
    description: Topic APIs
  - name: partition
    description: Partition APIs
  - name: consumer
    description: Consumer APIs
paths:
  /topics:
    get:
      tags:
        - topic
      description: Get a list of Kafka topics.
      operationId: getTopics
      produces:
        - application/json
      responses:
        '200':
          description: List of topic names
          schema:
            type: array
            items:
              type: string
  '/topics/{topic_name}':
    get:
      tags:
        - topic
      description: Get metadata about a specific topic.
      operationId: getTopicMetadata
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic to get metadata about
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Topic'
        '404':
          description: Topic not found
    post:
      tags:
        - topic
      description: >-
        Produce messages to a topic, optionally specifying keys or partitions
        for the messages. If no partition is provided, one will be chosen based
        on the hash of the key. If no key is provided, the partition will be
        chosen for each message in a round-robin fashion.
      operationId: produceMessageToTopic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic to produce the messages to
          required: true
          type: string
        - name: records
          in: body
          description:  A list of records to produce to the topic.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
      responses:
        '200':
          description: Successfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Offset'
        '404':
          description: Topic not found
        '422':
          description: Unprocessable entity
  '/topics/{topic_name}/partitions':
    get:
      tags:
        - partition
      description: Get a list of partitions for the topic.
      operationId: getPartitionsForTopic
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Partition'
        '404':
          description: Topic not found
  '/topics/{topic_name}/partitions/{partition_id}':
    get:
      tags:
        - partition
      description: Get metadata about a single partition in the topic.
      operationId: getPartitionMetadataInTopic
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic
          required: true
          type: string
        - name: partition_id
          in: path
          description: ID of the partition to inspect
          required: true
          type: integer
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Partition'
        '404':
          description: Topic or partition not found
    post:
      tags:
        - partition
      description: Produce messages to one partition of the topic.
      operationId: produceMessageToPartitionOfTopic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic to produce the messages to
          required: true
          type: string
        - name: partition_id
          in: path
          description: Partition to produce the messages to
          required: true
          type: integer
        - name: records
          in: body
          description:  A list of records to produce to partition.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
      responses:
        '200':
          description: Successfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Offset'
        '404':
          description: Topic not found
        '422':
          description: Unprocessable entity
  '/consumers/{group_name}/instances/{instance}':
    delete:
      tags:
        - consumer
      description: Destroy the consumer instance.
      operationId: destroyConsumer
      parameters:
        - name: group_name
          in: path
          description: The name of the consumer group
          required: true
          type: string
        - name: instance
          in: path
          description: The ID of the consumer instance
          required: true
          type: string
      responses:
        200:
          description: OK
        404:
          description: Consumer instance not found
definitions:
  Topic:
    description: The topics resource provides information about the topics in your Kafka cluster and their current state
    type: object
    properties:
      name:
        type: string
        description: Name of the topic
      configs:
        type: string
        description: Per-topic configuration overrides
      partitions:
        type: array
        description: List of partitions for this topic
        items:
          $ref: '#/definitions/Partition'
  Partition:
    description: The partitions resource provides per-partition metadata, including the current leaders and replicas for each partition
    type: object
    properties:
      partition:
        type: integer
        description: ID of the partition
      leader:
        type: integer
        description: Broker ID of the leader for this partition
      replicas:
        type: array
        description: List of brokers acting as replicas for this partition
        items:
          $ref: '#/definitions/Replica'
  Replica:
    type: object
    properties:
      broker:
        type: integer
        description: broker ID of the replica
      leader:
        type: boolean
        description: true if this replica is the leader for the partition
      sync:
        type: boolean
        description:  true if this replica is currently in sync with the leader
  Record:
    type: object
    properties:
      key:
        type: object
        description: The message key, formatted according to the embedded format, or null to omit a key (optional)
      value:
        type: object
        description: The message value, formatted according to the embedded format
      partition:
        type: integer
        description: Partition to store the message in (optional)
  Offset:
    type: object
    properties:
      partition:
        type: integer
        description: Partition the message was published to, or null if publishing the message failed
      offset:
        type: integer
        format: int64
        description: Offset of the message, or null if publishing the message failed
      error_code:
        type: integer
        format: int64
        description: An error code classifying the reason this operation failed, or null if it succeeded.
      error:
        type: string
        description: An error message describing why the operation failed, or null if it succeeded