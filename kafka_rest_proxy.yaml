swagger: '2.0'
info:
  description: Confluent Kafka REST proxy
  version: 1.0.0
  title: Kafka REST proxy
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: kafka.myhost.local
basePath: /v1
schemes:
  - http
paths:
  /topics:
    get:
      description: Get a list of Kafka topics.
      operationId: getTopics
      produces:
        - application/json
      responses:
        '200':
          description: List of topic names
          schema:
            type: array
            items:
              type: string
  '/topics/{topic_name}':
    get:
      description: Get metadata about a specific topic.
      operationId: getTopicMetadata
      produces:
        - application/json
      parameters:
        - name: topic_name
          in: path
          description: Name of the topic to get metadata about
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
           $ref: '#/definitions/Topic'
        '404':
          description: Topic not found
    post:
      description: 'Produce messages to a topic, optionally specifying keys or partitions for the messages. If no partition is provided, one will be chosen based on the hash of the key. If no key is provided, the partition will be chosen for each message in a round-robin fashion.'
      operationId: produceMessageToTopic
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '404':
          description: Topic not found
        '422':
          description: Unprocessable entity
definitions:
 Topic:
  type: object
  properties:
   name:
    type: string
   configs:
    type: string
   partitions:
    type: array
    items:
     $ref: '#/definitions/Partition'
 Partition:
   type: object
   properties:
    partition:
     type: integer
    leader:
     type: integer
    replicas:
     type: array
     items:
      $ref: '#/definitions/Replica'
 Replica:
   type: object
   properties:
    broker:
     type: integer
    leader:
     type: boolean
    sync:
     type: boolean
 Record:
  type: object
  properties:
   key:
    type: object
   value:
    type: object
   partition:
    type: integer

