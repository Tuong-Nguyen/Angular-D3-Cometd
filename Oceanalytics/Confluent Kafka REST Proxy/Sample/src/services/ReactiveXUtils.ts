/**
 * Created by nctuong on 5/8/2017.
 */

/**
 * Create an Observable which emits items of Obserables generated by the factory
 * - each are delayed by an interval which are > pollingInterval and < pollingInterval * 2
 * @param pollingInterval
 * @param factory: function which create an Observable for generating items
 * @returns {Observable<R>}
 */
function poll<T>(pollingInterval: number, factory: () => Observable<T>): Observable<T> {
  let lastRunAt = Date.now() - pollingInterval;
  return Observable.interval(pollingInterval)
    .concatMap(item => {
      const elapsedInterval = Date.now() - lastRunAt;
      if (elapsedInterval >= pollingInterval) {
        const endObservable = Observable.create((observable) => {
          lastRunAt = Date.now();
          observable.complete();
        });
        return Observable.concat(factory(), endObservable);
      } else {
        return Observable.empty();
      }
    });
};

export {poll};
