/**
 * Kafka REST proxy
 * Confluent Kafka REST proxy
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KafkaRestProxy) {
      root.KafkaRestProxy = {};
    }
    root.KafkaRestProxy.ConsumerRequest = factory(root.KafkaRestProxy.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ConsumerRequest model module.
   * @module model/ConsumerRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ConsumerRequest</code>.
   * @alias module:model/ConsumerRequest
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>ConsumerRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ConsumerRequest} obj Optional instance to populate.
   * @return {module:model/ConsumerRequest} The populated <code>ConsumerRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('format')) {
        obj['format'] = ApiClient.convertToType(data['format'], 'String');
      }
      if (data.hasOwnProperty('auto.offset.reset')) {
        obj['auto.offset.reset'] = ApiClient.convertToType(data['auto.offset.reset'], 'String');
      }
      if (data.hasOwnProperty('auto.commit.enable')) {
        obj['auto.commit.enable'] = ApiClient.convertToType(data['auto.commit.enable'], 'String');
      }
    }
    return obj;
  }

  /**
   * Name for the consumer instance, which will be used in URLs for the consumer. This must be unique, at least within the proxy process handling the request. If omitted, falls back on the automatically generated ID. Using automatically generated names is recommended for most use cases.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The format of consumed messages, which is used to convert messages into a JSON-compatible form. Valid values \"binary\", \"avro\", \"json\". If unspecified, defaults to “binary”.
   * @member {String} format
   */
  exports.prototype['format'] = undefined;
  /**
   * Sets the auto.offset.reset setting for the consumer
   * @member {String} auto.offset.reset
   */
  exports.prototype['auto.offset.reset'] = undefined;
  /**
   * Sets the auto.commit.enable setting for the consumer
   * @member {String} auto.commit.enable
   */
  exports.prototype['auto.commit.enable'] = undefined;



  return exports;
}));


