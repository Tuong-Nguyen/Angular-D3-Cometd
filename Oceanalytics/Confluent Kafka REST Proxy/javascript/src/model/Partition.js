/**
 * Kafka REST proxy
 * Confluent Kafka REST proxy
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Replica'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Replica'));
  } else {
    // Browser globals (root is window)
    if (!root.KafkaRestProxy) {
      root.KafkaRestProxy = {};
    }
    root.KafkaRestProxy.Partition = factory(root.KafkaRestProxy.ApiClient, root.KafkaRestProxy.Replica);
  }
}(this, function(ApiClient, Replica) {
  'use strict';




  /**
   * The Partition model module.
   * @module model/Partition
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Partition</code>.
   * The partitions resource provides per-partition metadata, including the current leaders and replicas for each partition
   * @alias module:model/Partition
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>Partition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Partition} obj Optional instance to populate.
   * @return {module:model/Partition} The populated <code>Partition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('partition')) {
        obj['partition'] = ApiClient.convertToType(data['partition'], 'Number');
      }
      if (data.hasOwnProperty('leader')) {
        obj['leader'] = ApiClient.convertToType(data['leader'], 'Number');
      }
      if (data.hasOwnProperty('replicas')) {
        obj['replicas'] = ApiClient.convertToType(data['replicas'], [Replica]);
      }
    }
    return obj;
  }

  /**
   * ID of the partition
   * @member {Number} partition
   */
  exports.prototype['partition'] = undefined;
  /**
   * Broker ID of the leader for this partition
   * @member {Number} leader
   */
  exports.prototype['leader'] = undefined;
  /**
   * List of brokers acting as replicas for this partition
   * @member {Array.<module:model/Replica>} replicas
   */
  exports.prototype['replicas'] = undefined;



  return exports;
}));


