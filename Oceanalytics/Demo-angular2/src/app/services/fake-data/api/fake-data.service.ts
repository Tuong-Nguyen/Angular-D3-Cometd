import {Injectable} from '@angular/core';
import {environment} from 'environments/environment';
import {StartOfDayAgentByAccount} from 'app/services/fake-data/model/StartOfDayAgentByAccount';
import {StartOfDayAgent} from 'app/services/fake-data/model/StartOfDayAgent';
import {StartOfDayRoutingService} from 'app/services/fake-data/model/StartOfDayRoutingService';
import {StartOfDayAgentByRoutingService} from 'app/services/fake-data/model/StartOfDayAgentByRoutingService';
import {MovingWindowAgentByAccount} from 'app/services/fake-data/model/MovingWindowAgentByAccount';
import {MovingWindowAgent} from 'app/services/fake-data/model/MovingWindowAgent';
import {MovingWindowRoutingService} from 'app/services/fake-data/model/MovingWindowRoutingService';
import {MovingWindowAgentByRoutingService} from 'app/services/fake-data/model/MovingWindowAgentByRoutingService';

@Injectable()
export class FakeDataService {

  constructor() {
  }

  public realtimeData(type: string): MovingWindowAgent | MovingWindowAgentByAccount | MovingWindowAgentByRoutingService |
    MovingWindowRoutingService | StartOfDayAgent | StartOfDayAgentByAccount | StartOfDayAgentByRoutingService | StartOfDayRoutingService {
    let result: any;
    switch (type) {
      case environment.AGENTMEASURES:
        const startOfDayAgentByAccount: StartOfDayAgentByAccount = new StartOfDayAgentByAccount();
        startOfDayAgentByAccount.accountState = this.randomString();
        startOfDayAgentByAccount.activityCodeName = this.randomString();
        startOfDayAgentByAccount.bargedOutTimeStamp = this.randomString();
        startOfDayAgentByAccount.destinationParty = this.randomString();
        startOfDayAgentByAccount.channel = this.randomString();
        startOfDayAgentByAccount.available = this.randomString();
        startOfDayAgentByAccount.acwRealtimeIndicator = this.randomString();
        startOfDayAgentByAccount.routingAttributeService = this.randomString();
        startOfDayAgentByAccount.originatedTimeAgentSegment = this.randomString();
        startOfDayAgentByAccount.serviceDisplayName = this.randomString();
        startOfDayAgentByAccount.oldestContactWaiting = this.randomString();
        startOfDayAgentByAccount.conversationInteractionStateReasonTimestamp = this.randomString();
        startOfDayAgentByAccount.finalDispositionAgentSegmentTimeStamp = this.randomString();
        startOfDayAgentByAccount.activityCode = this.randomString();
        startOfDayAgentByAccount.agentLogoutTimeStamp = this.randomString();
        startOfDayAgentByAccount.holdTimeStamp = this.randomString();
        startOfDayAgentByAccount.routingPoint = this.randomString();
        startOfDayAgentByAccount.agentFirstName = this.randomString();
        startOfDayAgentByAccount.conversationInteractionStateTimestamp = this.randomString();
        startOfDayAgentByAccount.bargedOutIndicator = this.randomString();
        startOfDayAgentByAccount.supervisorFirstName = this.randomNumber().toString();
        startOfDayAgentByAccount.expectedWaitTime = this.randomString();
        startOfDayAgentByAccount.staffed = this.randomString();
        startOfDayAgentByAccount.finalDispositionAgentSegment = this.randomString();
        startOfDayAgentByAccount.engagementID = this.randomString();
        startOfDayAgentByAccount.conversationInteractionTypeTimestamp = this.randomString();
        startOfDayAgentByAccount.answerTimeStamp = this.randomString();
        startOfDayAgentByAccount.conversationInteractionStateReason = this.randomString();
        startOfDayAgentByAccount.agentLastName = this.randomNumber().toString();
        startOfDayAgentByAccount.loginTimeStamp = this.randomNumber().toString();
        startOfDayAgentByAccount.lastStateChangeTimestamp = this.randomNumber().toString();
        startOfDayAgentByAccount.transferredIndicator = this.randomString();
        startOfDayAgentByAccount.originatedTimeContact = this.randomString();
        startOfDayAgentByAccount.consultIndicator = this.randomString();
        startOfDayAgentByAccount.initialDispositionAgentSegment = this.randomString();
        startOfDayAgentByAccount.supervisorId = this.randomString();
        startOfDayAgentByAccount.supervisorLastName = this.randomString();
        startOfDayAgentByAccount.groupName = this.randomString();
        startOfDayAgentByAccount.observeTimeStamp = this.randomString();
        startOfDayAgentByAccount.activityCodeTimeStamp = this.randomString();
        startOfDayAgentByAccount.finalDispositionCustomerContact = this.randomString();
        startOfDayAgentByAccount.abandonedContact = this.randomString();
        startOfDayAgentByAccount.finalDispositionCustomerEngagement = this.randomString();
        startOfDayAgentByAccount.customerID = this.randomString();
        startOfDayAgentByAccount.nrReasonCode = this.randomNumber().toString();
        startOfDayAgentByAccount.customercontactIsIncomplete = this.randomString();
        startOfDayAgentByAccount.agentChannelAddress = this.randomString();
        startOfDayAgentByAccount.customerengagementIsIncomplete = this.randomString();
        startOfDayAgentByAccount.agentId = this.randomString();
        startOfDayAgentByAccount.accountLogoutTimeStamp = this.randomString();
        startOfDayAgentByAccount.contactID = this.randomString();
        startOfDayAgentByAccount.workLimit = this.randomNumber().toString();
        startOfDayAgentByAccount.agentDisplayName = this.randomString();
        startOfDayAgentByAccount.agentSegmentRTIncomplete = this.randomString();
        startOfDayAgentByAccount.providerContact = this.randomString();
        startOfDayAgentByAccount.initialDispositionCustomerContact = this.randomString();
        startOfDayAgentByAccount.consultTimeStamp = this.randomString();
        startOfDayAgentByAccount.routingServiceCategory = this.randomString();
        startOfDayAgentByAccount.callingParty = this.randomString();
        startOfDayAgentByAccount.provider = this.randomString();
        startOfDayAgentByAccount.agentState = this.randomString();
        startOfDayAgentByAccount.workState = this.randomString();
        startOfDayAgentByAccount.lastWorkCodeChangeTimestamp = this.randomNumber().toString();
        startOfDayAgentByAccount.conferenceIndicator = this.randomString();
        startOfDayAgentByAccount.coachTimeStamp = this.randomString();
        startOfDayAgentByAccount.disconnectFromHoldIndicator = this.randomString();
        startOfDayAgentByAccount.offeredServiceAttribute = this.randomString();
        startOfDayAgentByAccount.accountAddress = this.randomString();
        startOfDayAgentByAccount.nrReasonCodeName = this.randomString();
        startOfDayAgentByAccount.contactIsExternal = this.randomString();
        startOfDayAgentByAccount.lastStateReasonTimestamp = this.randomNumber().toString();
        startOfDayAgentByAccount.originatedTimeEngagement = this.randomString();
        startOfDayAgentByAccount.endTimeEngagement = this.randomString();
        startOfDayAgentByAccount.endTimeAgentSegment = this.randomString();
        startOfDayAgentByAccount.activeWorkCount = this.randomNumber().toString();
        startOfDayAgentByAccount.conversationInteractionType = this.randomString();
        startOfDayAgentByAccount.conversationInteractionState = this.randomString();
        startOfDayAgentByAccount.initialDispositionCustomerEngagement = this.randomString();
        startOfDayAgentByAccount.resourceInteractionID = this.randomString();
        startOfDayAgentByAccount.endTimeContact = this.randomString();
        startOfDayAgentByAccount.agentsegmentIsIncomplete = this.randomString();
        startOfDayAgentByAccount.holdIndicator = this.randomString();

        result = startOfDayAgentByAccount;
        break;

      case environment.AGENTBYACCOUNTMEASURES :
        const startOfDayAgent: StartOfDayAgent = new StartOfDayAgent();
        startOfDayAgent.accountState = this.randomString();
        startOfDayAgent.activityCodeName = this.randomString();
        startOfDayAgent.bargedOutTimeStamp = this.randomString();
        startOfDayAgent.destinationParty = this.randomString();
        startOfDayAgent.channel = this.randomString();
        startOfDayAgent.available = this.randomString();
        startOfDayAgent.acwRealtimeIndicator = this.randomString();
        startOfDayAgent.routingAttributeService = this.randomString();
        startOfDayAgent.originatedTimeAgentSegment = this.randomString();
        startOfDayAgent.serviceDisplayName = this.randomString();
        startOfDayAgent.oldestContactWaiting = this.randomString();
        startOfDayAgent.conversationInteractionStateReasonTimestamp = this.randomString();
        startOfDayAgent.finalDispositionAgentSegmentTimeStamp = this.randomString();
        startOfDayAgent.activityCode = this.randomString();
        startOfDayAgent.agentLogoutTimeStamp = this.randomString();
        startOfDayAgent.holdTimeStamp = this.randomString();
        startOfDayAgent.routingPoint = this.randomString();
        startOfDayAgent.agentFirstName = this.randomString();
        startOfDayAgent.conversationInteractionStateTimestamp = this.randomString();
        startOfDayAgent.bargedOutIndicator = this.randomString();
        startOfDayAgent.supervisorFirstName = this.randomNumber().toString();
        startOfDayAgent.expectedWaitTime = this.randomString();
        startOfDayAgent.staffed = this.randomString();
        startOfDayAgent.finalDispositionAgentSegment = this.randomString();
        startOfDayAgent.engagementID = this.randomString();
        startOfDayAgent.conversationInteractionTypeTimestamp = this.randomString();
        startOfDayAgent.answerTimeStamp = this.randomString();
        startOfDayAgent.conversationInteractionStateReason = this.randomString();
        startOfDayAgent.agentLastName = this.randomNumber().toString();
        startOfDayAgent.loginTimeStamp = this.randomNumber().toString();
        startOfDayAgent.lastStateChangeTimestamp = this.randomNumber().toString();
        startOfDayAgent.transferredIndicator = this.randomString();
        startOfDayAgent.originatedTimeContact = this.randomString();
        startOfDayAgent.consultIndicator = this.randomString();
        startOfDayAgent.initialDispositionAgentSegment = this.randomString();
        startOfDayAgent.supervisorId = this.randomString();
        startOfDayAgent.supervisorLastName = this.randomString();
        startOfDayAgent.groupName = this.randomString();
        startOfDayAgent.observeTimeStamp = this.randomString();
        startOfDayAgent.activityCodeTimeStamp = this.randomString();
        startOfDayAgent.finalDispositionCustomerContact = this.randomString();
        startOfDayAgent.abandonedContact = this.randomString();
        startOfDayAgent.finalDispositionCustomerEngagement = this.randomString();
        startOfDayAgent.customerID = this.randomString();
        startOfDayAgent.nrReasonCode = this.randomNumber().toString();
        startOfDayAgent.customercontactIsIncomplete = this.randomString();
        startOfDayAgent.agentChannelAddress = this.randomString();
        startOfDayAgent.customerengagementIsIncomplete = this.randomString();
        startOfDayAgent.agentId = this.randomString();
        startOfDayAgent.accountLogoutTimeStamp = this.randomString();
        startOfDayAgent.contactID = this.randomString();
        startOfDayAgent.workLimit = this.randomNumber().toString();
        startOfDayAgent.agentDisplayName = this.randomString();
        startOfDayAgent.agentSegmentRTIncomplete = this.randomString();
        startOfDayAgent.providerContact = this.randomString();
        startOfDayAgent.initialDispositionCustomerContact = this.randomString();
        startOfDayAgent.consultTimeStamp = this.randomString();
        startOfDayAgent.routingServiceCategory = this.randomString();
        startOfDayAgent.callingParty = this.randomString();
        startOfDayAgent.provider = this.randomString();
        startOfDayAgent.agentState = this.randomString();
        startOfDayAgent.workState = this.randomString();
        startOfDayAgent.lastWorkCodeChangeTimestamp = this.randomString();
        startOfDayAgent.conferenceIndicator = this.randomString();
        startOfDayAgent.coachTimeStamp = this.randomString();
        startOfDayAgent.disconnectFromHoldIndicator = this.randomString();
        startOfDayAgent.offeredServiceAttribute = this.randomString();
        startOfDayAgent.accountAddress = this.randomString();
        startOfDayAgent.nrReasonCodeName = this.randomString();
        startOfDayAgent.contactIsExternal = this.randomString();
        startOfDayAgent.lastStateReasonTimestamp = this.randomNumber().toString();
        startOfDayAgent.originatedTimeEngagement = this.randomString();
        startOfDayAgent.endTimeEngagement = this.randomString();
        startOfDayAgent.endTimeAgentSegment = this.randomString();
        startOfDayAgent.activeWorkCount = this.randomNumber().toString();
        startOfDayAgent.conversationInteractionType = this.randomString();
        startOfDayAgent.conversationInteractionState = this.randomString();
        startOfDayAgent.initialDispositionCustomerEngagement = this.randomString();
        startOfDayAgent.resourceInteractionID = this.randomString();
        startOfDayAgent.endTimeContact = this.randomString();
        startOfDayAgent.agentsegmentIsIncomplete = this.randomString();
        startOfDayAgent.holdIndicator = this.randomString();

        result = startOfDayAgent;
        break;

      case environment.ROUTINGSERVICEMEASURES:
        const startOfDayRoutingService: StartOfDayRoutingService = new StartOfDayRoutingService();
        startOfDayRoutingService.accountState = this.randomString();
        startOfDayRoutingService.activityCodeName = this.randomString();
        startOfDayRoutingService.bargedOutTimeStamp = this.randomString();
        startOfDayRoutingService.destinationParty = this.randomString();
        startOfDayRoutingService.channel = this.randomString();
        startOfDayRoutingService.available = this.randomString();
        startOfDayRoutingService.acwRealtimeIndicator = this.randomString();
        startOfDayRoutingService.routingAttributeService = this.randomString();
        startOfDayRoutingService.originatedTimeAgentSegment = this.randomString();
        startOfDayRoutingService.serviceDisplayName = this.randomString();
        startOfDayRoutingService.oldestContactWaiting = this.randomString();
        startOfDayRoutingService.conversationInteractionStateReasonTimestamp = this.randomString();
        startOfDayRoutingService.finalDispositionAgentSegmentTimeStamp = this.randomString();
        startOfDayRoutingService.activityCode = this.randomString();
        startOfDayRoutingService.agentLogoutTimeStamp = this.randomString();
        startOfDayRoutingService.holdTimeStamp = this.randomString();
        startOfDayRoutingService.routingPoint = this.randomString();
        startOfDayRoutingService.agentFirstName = this.randomString();
        startOfDayRoutingService.conversationInteractionStateTimestamp = this.randomString();
        startOfDayRoutingService.bargedOutIndicator = this.randomString();
        startOfDayRoutingService.supervisorFirstName = this.randomString();
        startOfDayRoutingService.expectedWaitTime = this.randomString();
        startOfDayRoutingService.staffed = this.randomString();
        startOfDayRoutingService.finalDispositionAgentSegment = this.randomString();
        startOfDayRoutingService.engagementID = this.randomString();
        startOfDayRoutingService.conversationInteractionTypeTimestamp = this.randomString();
        startOfDayRoutingService.answerTimeStamp = this.randomString();
        startOfDayRoutingService.conversationInteractionStateReason = this.randomString();
        startOfDayRoutingService.agentLastName = this.randomString();
        startOfDayRoutingService.loginTimeStamp = this.randomString();
        startOfDayRoutingService.lastStateChangeTimestamp = this.randomString();
        startOfDayRoutingService.transferredIndicator = this.randomString();
        startOfDayRoutingService.originatedTimeContact = this.randomString();
        startOfDayRoutingService.consultIndicator = this.randomString();
        startOfDayRoutingService.initialDispositionAgentSegment = this.randomString();
        startOfDayRoutingService.supervisorId = this.randomString();
        startOfDayRoutingService.supervisorLastName = this.randomString();
        startOfDayRoutingService.groupName = this.randomString();
        startOfDayRoutingService.observeTimeStamp = this.randomString();
        startOfDayRoutingService.activityCodeTimeStamp = this.randomString();
        startOfDayRoutingService.finalDispositionCustomerContact = this.randomString();
        startOfDayRoutingService.abandonedContact = this.randomString();
        startOfDayRoutingService.finalDispositionCustomerEngagement = this.randomString();
        startOfDayRoutingService.customerID = this.randomString();
        startOfDayRoutingService.nrReasonCode = this.randomNumber().toString();
        startOfDayRoutingService.customercontactIsIncomplete = this.randomString();
        startOfDayRoutingService.agentChannelAddress = this.randomString();
        startOfDayRoutingService.customerengagementIsIncomplete = this.randomString();
        startOfDayRoutingService.agentId = this.randomString();
        startOfDayRoutingService.accountLogoutTimeStamp = this.randomString();
        startOfDayRoutingService.contactID = this.randomString();
        startOfDayRoutingService.workLimit = this.randomNumber().toString();
        startOfDayRoutingService.agentDisplayName = this.randomString();
        startOfDayRoutingService.agentSegmentRTIncomplete = this.randomString();
        startOfDayRoutingService.providerContact = this.randomString();
        startOfDayRoutingService.initialDispositionCustomerContact = this.randomString();
        startOfDayRoutingService.consultTimeStamp = this.randomString();
        startOfDayRoutingService.routingServiceCategory = this.randomString();
        startOfDayRoutingService.callingParty = this.randomString();
        startOfDayRoutingService.provider = this.randomString();
        startOfDayRoutingService.agentState = this.randomString();
        startOfDayRoutingService.workState = this.randomString();
        startOfDayRoutingService.lastWorkCodeChangeTimestamp = this.randomString();
        startOfDayRoutingService.conferenceIndicator = this.randomString();
        startOfDayRoutingService.coachTimeStamp = this.randomString();
        startOfDayRoutingService.disconnectFromHoldIndicator = this.randomString();
        startOfDayRoutingService.offeredServiceAttribute = this.randomString();
        startOfDayRoutingService.accountAddress = this.randomString();
        startOfDayRoutingService.nrReasonCodeName = this.randomString();
        startOfDayRoutingService.contactIsExternal = this.randomString();
        startOfDayRoutingService.lastStateReasonTimestamp = this.randomString();
        startOfDayRoutingService.originatedTimeEngagement = this.randomString();
        startOfDayRoutingService.endTimeEngagement = this.randomString();
        startOfDayRoutingService.endTimeAgentSegment = this.randomString();
        startOfDayRoutingService.activeWorkCount = this.randomNumber().toString();
        startOfDayRoutingService.conversationInteractionType = this.randomString();
        startOfDayRoutingService.conversationInteractionState = this.randomString();
        startOfDayRoutingService.initialDispositionCustomerEngagement = this.randomString();
        startOfDayRoutingService.resourceInteractionID = this.randomString();
        startOfDayRoutingService.endTimeContact = this.randomString();
        startOfDayRoutingService.agentsegmentIsIncomplete = this.randomString();
        startOfDayRoutingService.holdIndicator = this.randomString();

        result = startOfDayRoutingService;
        break;

      case environment.AGENTBYROUTINGSERVICEMEASURES :
        const startOfDayAgentByRoutingService: StartOfDayAgentByRoutingService = new StartOfDayAgentByRoutingService();
        startOfDayAgentByRoutingService.Agent_ID = this.randomNumber().toString();
        startOfDayAgentByRoutingService.Supervisor_ID = this.randomNumber().toString();
        startOfDayAgentByRoutingService.Agent_Surname = this.randomString();
        startOfDayAgentByRoutingService.Agent_Firstname = this.randomString();
        startOfDayAgentByRoutingService.Supervisor_Surname = this.randomString();
        startOfDayAgentByRoutingService.Supervisor_Firstname = this.randomString();
        startOfDayAgentByRoutingService.Service_Display_Name = this.randomString();
        startOfDayAgentByRoutingService.Provider_ID = this.randomNumber().toString();
        startOfDayAgentByRoutingService.Channel_ID = this.randomNumber().toString();
        startOfDayAgentByRoutingService.Offered = this.randomNumber();
        startOfDayAgentByRoutingService.Completed = this.randomNumber();
        startOfDayAgentByRoutingService.Abandoned = this.randomNumber().toString();
        startOfDayAgentByRoutingService.Not_Answered = this.randomNumber();
        startOfDayAgentByRoutingService.Conferences = this.randomNumber();
        startOfDayAgentByRoutingService.Answered = this.randomNumber();
        startOfDayAgentByRoutingService.Consults = this.randomNumber();
        startOfDayAgentByRoutingService.Transfers = this.randomNumber();
        startOfDayAgentByRoutingService.Hold_Duration = this.randomNumber();
        startOfDayAgentByRoutingService.Disconnects_From_Hold = this.randomNumber();
        startOfDayAgentByRoutingService.Holds = this.randomNumber();
        startOfDayAgentByRoutingService.Long_Engagements = this.randomNumber();
        startOfDayAgentByRoutingService.Short_Engagements = this.randomNumber();
        startOfDayAgentByRoutingService.Long_Holds = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_TO_AGENT = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_TO_SERVICE = this.randomNumber();
        startOfDayAgentByRoutingService.CONSULTS_INITIATED = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_INITIATED = this.randomNumber();
        startOfDayAgentByRoutingService.CONFERENCED_INITIATED = this.randomNumber();
        startOfDayAgentByRoutingService.CONSULTS_ACCEPTED = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_ACCEPTED = this.randomNumber();
        startOfDayAgentByRoutingService.CONFERENCED_ACCEPTED = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_INITIATED_TO_SERVICE = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_INITIATED_TO_AGENT = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_ACCEPTED_FROM_SERVICE = this.randomNumber();
        startOfDayAgentByRoutingService.TRANSFERRED_ACCEPTED_FROM_AGENT = this.randomNumber();
        startOfDayAgentByRoutingService.COACHED = this.randomNumber();
        startOfDayAgentByRoutingService.COACHING = this.randomNumber();
        startOfDayAgentByRoutingService.OBSERVED = this.randomNumber();
        startOfDayAgentByRoutingService.OBSERVING = this.randomNumber();
        startOfDayAgentByRoutingService.BARGED_IN = this.randomNumber();
        startOfDayAgentByRoutingService.BARGED_OUT = this.randomNumber();
        startOfDayAgentByRoutingService.CONSULT_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.CONSULTING_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.COACHED_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.COACHING_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.OBSERVED_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.OBSERVING_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.BARGED_IN_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.BARGED_OUT_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.ACW_DURATION = this.randomNumber();
        startOfDayAgentByRoutingService.ACW = this.randomNumber();
        startOfDayAgentByRoutingService.ACW_EXTENDED = this.randomNumber();
        startOfDayAgentByRoutingService.Long_Wrap_Ups = this.randomNumber();
        startOfDayAgentByRoutingService.Short_Wrap_Ups = this.randomNumber();

        result = startOfDayAgentByRoutingService;
        break;

      case environment.AGENTMEASURESMOVINGWINDOW :
        const movingWindowAgentByAccount: MovingWindowAgentByAccount = new MovingWindowAgentByAccount();
        movingWindowAgentByAccount.accountState = this.randomString();
        movingWindowAgentByAccount.activityCodeName = this.randomString();
        movingWindowAgentByAccount.bargedOutTimeStamp = this.randomString();
        movingWindowAgentByAccount.destinationParty = this.randomString();
        movingWindowAgentByAccount.channel = this.randomString();
        movingWindowAgentByAccount.available = this.randomString();
        movingWindowAgentByAccount.acwRealtimeIndicator = this.randomString();
        movingWindowAgentByAccount.routingAttributeService = this.randomString();
        movingWindowAgentByAccount.originatedTimeAgentSegment = this.randomString();
        movingWindowAgentByAccount.serviceDisplayName = this.randomString();
        movingWindowAgentByAccount.oldestContactWaiting = this.randomString();
        movingWindowAgentByAccount.conversationInteractionStateReasonTimestamp = this.randomString();
        movingWindowAgentByAccount.finalDispositionAgentSegmentTimeStamp = this.randomString();
        movingWindowAgentByAccount.activityCode = this.randomString();
        movingWindowAgentByAccount.agentLogoutTimeStamp = this.randomString();
        movingWindowAgentByAccount.holdTimeStamp = this.randomString();
        movingWindowAgentByAccount.routingPoint = this.randomString();
        movingWindowAgentByAccount.agentFirstName = this.randomString();
        movingWindowAgentByAccount.conversationInteractionStateTimestamp = this.randomString();
        movingWindowAgentByAccount.bargedOutIndicator = this.randomString();
        movingWindowAgentByAccount.supervisorFirstName = this.randomNumber().toString();
        movingWindowAgentByAccount.expectedWaitTime = this.randomString();
        movingWindowAgentByAccount.staffed = this.randomString();
        movingWindowAgentByAccount.finalDispositionAgentSegment = this.randomString();
        movingWindowAgentByAccount.engagementID = this.randomString();
        movingWindowAgentByAccount.conversationInteractionTypeTimestamp = this.randomString();
        movingWindowAgentByAccount.answerTimeStamp = this.randomString();
        movingWindowAgentByAccount.conversationInteractionStateReason = this.randomString();
        movingWindowAgentByAccount.agentLastName = this.randomNumber().toString();
        movingWindowAgentByAccount.loginTimeStamp = this.randomNumber().toString();
        movingWindowAgentByAccount.lastStateChangeTimestamp = this.randomNumber().toString();
        movingWindowAgentByAccount.transferredIndicator = this.randomString();
        movingWindowAgentByAccount.originatedTimeContact = this.randomString();
        movingWindowAgentByAccount.consultIndicator = this.randomString();
        movingWindowAgentByAccount.initialDispositionAgentSegment = this.randomString();
        movingWindowAgentByAccount.supervisorId = this.randomString();
        movingWindowAgentByAccount.supervisorLastName = this.randomString();
        movingWindowAgentByAccount.groupName = this.randomString();
        movingWindowAgentByAccount.observeTimeStamp = this.randomString();
        movingWindowAgentByAccount.activityCodeTimeStamp = this.randomString();
        movingWindowAgentByAccount.finalDispositionCustomerContact = this.randomString();
        movingWindowAgentByAccount.abandonedContact = this.randomString();
        movingWindowAgentByAccount.finalDispositionCustomerEngagement = this.randomString();
        movingWindowAgentByAccount.customerID = this.randomString();
        movingWindowAgentByAccount.nrReasonCode = this.randomNumber().toString();
        movingWindowAgentByAccount.customercontactIsIncomplete = this.randomString();
        movingWindowAgentByAccount.agentChannelAddress = this.randomString();
        movingWindowAgentByAccount.customerengagementIsIncomplete = this.randomString();
        movingWindowAgentByAccount.agentId = this.randomString();
        movingWindowAgentByAccount.accountLogoutTimeStamp = this.randomString();
        movingWindowAgentByAccount.contactID = this.randomString();
        movingWindowAgentByAccount.workLimit = this.randomNumber().toString();
        movingWindowAgentByAccount.agentDisplayName = this.randomString();
        movingWindowAgentByAccount.agentSegmentRTIncomplete = this.randomString();
        movingWindowAgentByAccount.providerContact = this.randomString();
        movingWindowAgentByAccount.initialDispositionCustomerContact = this.randomString();
        movingWindowAgentByAccount.consultTimeStamp = this.randomString();
        movingWindowAgentByAccount.routingServiceCategory = this.randomString();
        movingWindowAgentByAccount.callingParty = this.randomString();
        movingWindowAgentByAccount.provider = this.randomString();
        movingWindowAgentByAccount.agentState = this.randomString();
        movingWindowAgentByAccount.workState = this.randomString();
        movingWindowAgentByAccount.lastWorkCodeChangeTimestamp = this.randomNumber().toString();
        movingWindowAgentByAccount.conferenceIndicator = this.randomString();
        movingWindowAgentByAccount.coachTimeStamp = this.randomString();
        movingWindowAgentByAccount.disconnectFromHoldIndicator = this.randomString();
        movingWindowAgentByAccount.offeredServiceAttribute = this.randomString();
        movingWindowAgentByAccount.accountAddress = this.randomString();
        movingWindowAgentByAccount.nrReasonCodeName = this.randomString();
        movingWindowAgentByAccount.contactIsExternal = this.randomString();
        movingWindowAgentByAccount.lastStateReasonTimestamp = this.randomNumber().toString();
        movingWindowAgentByAccount.originatedTimeEngagement = this.randomString();
        movingWindowAgentByAccount.endTimeEngagement = this.randomString();
        movingWindowAgentByAccount.endTimeAgentSegment = this.randomString();
        movingWindowAgentByAccount.activeWorkCount = this.randomNumber().toString();
        movingWindowAgentByAccount.conversationInteractionType = this.randomString();
        movingWindowAgentByAccount.conversationInteractionState = this.randomString();
        movingWindowAgentByAccount.initialDispositionCustomerEngagement = this.randomString();
        movingWindowAgentByAccount.resourceInteractionID = this.randomString();
        movingWindowAgentByAccount.endTimeContact = this.randomString();
        movingWindowAgentByAccount.agentsegmentIsIncomplete = this.randomString();
        movingWindowAgentByAccount.holdIndicator = this.randomString();

        result = movingWindowAgentByAccount;
        break;

      case environment.AGENTBYACCOUNTMEASURSMOVINGWINDOW :
        const movingWindowAgent: MovingWindowAgent = new MovingWindowAgent();
        movingWindowAgent.First_Name = this.randomString();
        movingWindowAgent.Last_Name = this.randomString();
        movingWindowAgent.Agent_ID = this.randomNumber().toString();
        movingWindowAgent.Display_Name = this.randomString();
        movingWindowAgent.Supervisor_First_Name = this.randomString();
        movingWindowAgent.Supervisor_Last_Name = this.randomString();
        movingWindowAgent.Supervisor_ID = this.randomNumber().toString();
        movingWindowAgent.Offered = this.randomNumber();
        movingWindowAgent.Abandoned = this.randomNumber();
        movingWindowAgent.Answered = this.randomNumber();
        movingWindowAgent.Completed = this.randomNumber();
        movingWindowAgent.Transfers = this.randomNumber();
        movingWindowAgent.Conferences = this.randomNumber();
        movingWindowAgent.Consults = this.randomNumber();
        movingWindowAgent.Not_Answered = this.randomNumber();
        movingWindowAgent.Holds = this.randomNumber();
        movingWindowAgent.Active_Time = this.randomNumber();
        movingWindowAgent.Hold_Time = this.randomNumber();
        movingWindowAgent.Alert_Time = this.randomNumber();
        movingWindowAgent.Not_Ready_Time = this.randomNumber();
        movingWindowAgent.Logged_In_Time = this.randomNumber();
        movingWindowAgent.Idle_Time = this.randomNumber();
        movingWindowAgent.Ready = this.randomNumber();
        movingWindowAgent.Not_Ready = this.randomNumber();
        movingWindowAgent.Disconnects_From_Hold = this.randomNumber();
        movingWindowAgent.Long_Holds = this.randomNumber();
        movingWindowAgent.Last_State_Change_Time = this.randomNumber();
        movingWindowAgent.Provider_ID = this.randomNumber();
        movingWindowAgent.Agent_State = this.randomNumber();
        movingWindowAgent.Work_State = this.randomNumber();
        movingWindowAgent.ID = this.randomNumber();
        movingWindowAgent.LastState_Change_Timestamp = this.randomNumber().toString();
        movingWindowAgent.Login_TimeStamp = this.randomNumber().toString();
        movingWindowAgent.logoutTimeStamp = this.randomNumber().toString();
        movingWindowAgent.NR_Reason_Code_Name = this.randomString();
        movingWindowAgent.LastStateReasonTimestamp = this.randomNumber().toString();
        movingWindowAgent.NR_Reason_Code = this.randomString();
        movingWindowAgent.Long_Engagements = this.randomNumber();
        movingWindowAgent.Short_Engagements = this.randomNumber();
        movingWindowAgent.Long_Wrap_Ups = this.randomNumber();
        movingWindowAgent.Short_Wrap_Ups = this.randomNumber();
        movingWindowAgent.Short_Not_Ready = this.randomNumber();
        movingWindowAgent.Blended_active_time = this.randomNumber();
        movingWindowAgent.Blended_alerting_time = this.randomNumber();
        movingWindowAgent.Additional_time = this.randomNumber();
        movingWindowAgent.TRANSFERRED_TO_AGENT = this.randomNumber();
        movingWindowAgent.TRANSFERRED_TO_SERVICE = this.randomNumber();
        movingWindowAgent.ADHOC = this.randomNumber();
        movingWindowAgent.ADHOC_DURATION = this.randomNumber();
        movingWindowAgent.CONSULTS_INITIATED = this.randomNumber();
        movingWindowAgent.TRANSFERRED_INITIATED = this.randomNumber();
        movingWindowAgent.CONFERENCED_INITIATED = this.randomNumber();
        movingWindowAgent.CONSULTS_ACCEPTED = this.randomNumber();
        movingWindowAgent.TRANSFERRED_ACCEPTED = this.randomNumber();
        movingWindowAgent.CONFERENCED_ACCEPTED = this.randomNumber();
        movingWindowAgent.TRANSFERRED_INITIATED_TO_SERVICE = this.randomNumber();
        movingWindowAgent.TRANSFERRED_INITIATED_TO_AGENT = this.randomNumber();
        movingWindowAgent.TRANSFERRED_ACCEPTED_FROM_SERVICE = this.randomNumber();
        movingWindowAgent.TRANSFERRED_ACCEPTED_FROM_AGENT = this.randomNumber();
        movingWindowAgent.COACHED = this.randomNumber();
        movingWindowAgent.COACHING = this.randomNumber();
        movingWindowAgent.OBSERVED = this.randomNumber();
        movingWindowAgent.OBSERVING = this.randomNumber();
        movingWindowAgent.BARGED_IN = this.randomNumber();
        movingWindowAgent.BARGED_OUT = this.randomNumber();
        movingWindowAgent.CONSULT_DURATION = this.randomNumber();
        movingWindowAgent.CONSULTING_DURATION = this.randomNumber();
        movingWindowAgent.CONSULTED_DURATION = this.randomNumber();
        movingWindowAgent.COACHED_DURATION = this.randomNumber();
        movingWindowAgent.COACHING_DURATION = this.randomNumber();
        movingWindowAgent.OBSERVED_DURATION = this.randomNumber();
        movingWindowAgent.OBSERVING_DURATION = this.randomNumber();
        movingWindowAgent.BARGED_IN_DURATION = this.randomNumber();
        movingWindowAgent.BARGED_OUT_DURATION = this.randomNumber();
        movingWindowAgent.ACW_DURATION = this.randomNumber();
        movingWindowAgent.ACW = this.randomNumber();
        movingWindowAgent.ACW_EXTENDED = this.randomNumber();
        result = movingWindowAgent;
        break;

      case environment.ROUTINGSERVICEMEASURESMOVINGWINDOW :
        const movingWindowRoutingService: MovingWindowRoutingService = new MovingWindowRoutingService();
        movingWindowRoutingService.accountState = this.randomString();
        movingWindowRoutingService.activityCodeName = this.randomString();
        movingWindowRoutingService.bargedOutTimeStamp = this.randomString();
        movingWindowRoutingService.destinationParty = this.randomString();
        movingWindowRoutingService.channel = this.randomString();
        movingWindowRoutingService.available = this.randomString();
        movingWindowRoutingService.acwRealtimeIndicator = this.randomString();
        movingWindowRoutingService.routingAttributeService = this.randomString();
        movingWindowRoutingService.originatedTimeAgentSegment = this.randomString();
        movingWindowRoutingService.serviceDisplayName = this.randomString();
        movingWindowRoutingService.oldestContactWaiting = this.randomString();
        movingWindowRoutingService.conversationInteractionStateReasonTimestamp = this.randomString();
        movingWindowRoutingService.finalDispositionAgentSegmentTimeStamp = this.randomString();
        movingWindowRoutingService.activityCode = this.randomString();
        movingWindowRoutingService.agentLogoutTimeStamp = this.randomString();
        movingWindowRoutingService.holdTimeStamp = this.randomString();
        movingWindowRoutingService.routingPoint = this.randomString();
        movingWindowRoutingService.agentFirstName = this.randomString();
        movingWindowRoutingService.conversationInteractionStateTimestamp = this.randomString();
        movingWindowRoutingService.bargedOutIndicator = this.randomString();
        movingWindowRoutingService.supervisorFirstName = this.randomString();
        movingWindowRoutingService.expectedWaitTime = this.randomString();
        movingWindowRoutingService.staffed = this.randomString();
        movingWindowRoutingService.finalDispositionAgentSegment = this.randomString();
        movingWindowRoutingService.engagementID = this.randomString();
        movingWindowRoutingService.conversationInteractionTypeTimestamp = this.randomString();
        movingWindowRoutingService.answerTimeStamp = this.randomString();
        movingWindowRoutingService.conversationInteractionStateReason = this.randomString();
        movingWindowRoutingService.agentLastName = this.randomString();
        movingWindowRoutingService.loginTimeStamp = this.randomString();
        movingWindowRoutingService.lastStateChangeTimestamp = this.randomString();
        movingWindowRoutingService.transferredIndicator = this.randomString();
        movingWindowRoutingService.originatedTimeContact = this.randomString();
        movingWindowRoutingService.consultIndicator = this.randomString();
        movingWindowRoutingService.initialDispositionAgentSegment = this.randomString();
        movingWindowRoutingService.supervisorId = this.randomString();
        movingWindowRoutingService.supervisorLastName = this.randomString();
        movingWindowRoutingService.groupName = this.randomString();
        movingWindowRoutingService.observeTimeStamp = this.randomString();
        movingWindowRoutingService.activityCodeTimeStamp = this.randomString();
        movingWindowRoutingService.finalDispositionCustomerContact = this.randomString();
        movingWindowRoutingService.abandonedContact = this.randomString();
        movingWindowRoutingService.finalDispositionCustomerEngagement = this.randomString();
        movingWindowRoutingService.customerID = this.randomString();
        movingWindowRoutingService.nrReasonCode = this.randomString();
        movingWindowRoutingService.customercontactIsIncomplete = this.randomString();
        movingWindowRoutingService.agentChannelAddress = this.randomString();
        movingWindowRoutingService.customerengagementIsIncomplete = this.randomString();
        movingWindowRoutingService.agentId = this.randomString();
        movingWindowRoutingService.accountLogoutTimeStamp = this.randomString();
        movingWindowRoutingService.contactID = this.randomString();
        movingWindowRoutingService.workLimit = this.randomString();
        movingWindowRoutingService.agentDisplayName = this.randomString();
        movingWindowRoutingService.agentSegmentRTIncomplete = this.randomString();
        movingWindowRoutingService.providerContact = this.randomString();
        movingWindowRoutingService.initialDispositionCustomerContact = this.randomString();
        movingWindowRoutingService.consultTimeStamp = this.randomString();
        movingWindowRoutingService.routingServiceCategory = this.randomString();
        movingWindowRoutingService.callingParty = this.randomString();
        movingWindowRoutingService.provider = this.randomString();
        movingWindowRoutingService.agentState = this.randomString();
        movingWindowRoutingService.workState = this.randomString();
        movingWindowRoutingService.lastWorkCodeChangeTimestamp = this.randomString();
        movingWindowRoutingService.conferenceIndicator = this.randomString();
        movingWindowRoutingService.coachTimeStamp = this.randomString();
        movingWindowRoutingService.disconnectFromHoldIndicator = this.randomString();
        movingWindowRoutingService.offeredServiceAttribute = this.randomString();
        movingWindowRoutingService.accountAddress = this.randomString();
        movingWindowRoutingService.nrReasonCodeName = this.randomString();
        movingWindowRoutingService.contactIsExternal = this.randomString();
        movingWindowRoutingService.lastStateReasonTimestamp = this.randomString();
        movingWindowRoutingService.originatedTimeEngagement = this.randomString();
        movingWindowRoutingService.endTimeEngagement = this.randomString();
        movingWindowRoutingService.endTimeAgentSegment = this.randomString();
        movingWindowRoutingService.activeWorkCount = this.randomString();
        movingWindowRoutingService.conversationInteractionType = this.randomString();
        movingWindowRoutingService.conversationInteractionState = this.randomString();
        movingWindowRoutingService.initialDispositionCustomerEngagement = this.randomString();
        movingWindowRoutingService.resourceInteractionID = this.randomString();
        movingWindowRoutingService.endTimeContact = this.randomString();
        movingWindowRoutingService.agentsegmentIsIncomplete = this.randomString();
        movingWindowRoutingService.holdIndicator = this.randomString();

        result = movingWindowRoutingService;
        break;

      case environment.AGENTBYROUTINGSERVICEMEASURESMOVINGWINDOW :
        const movingWindowAgentByRoutingService: MovingWindowAgentByRoutingService = new MovingWindowAgentByRoutingService();
        movingWindowAgentByRoutingService.Agent_ID = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Supervisor_ID = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Agent_Surname = this.randomString();
        movingWindowAgentByRoutingService.Agent_Firstname = this.randomString();
        movingWindowAgentByRoutingService.Supervisor_Surname = this.randomString();
        movingWindowAgentByRoutingService.Supervisor_First_Name = this.randomString();
        movingWindowAgentByRoutingService.Routing_Service_ID = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Service_Display_Name = this.randomString();
        movingWindowAgentByRoutingService.Provider_ID = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Channel_ID = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Offered = this.randomNumber();
        movingWindowAgentByRoutingService.Completed = this.randomNumber();
        movingWindowAgentByRoutingService.Abandoned = this.randomNumber().toString();
        movingWindowAgentByRoutingService.Not_Answered = this.randomNumber();
        movingWindowAgentByRoutingService.Conferences = this.randomNumber();
        movingWindowAgentByRoutingService.Answered = this.randomNumber();
        movingWindowAgentByRoutingService.Consults = this.randomNumber();
        movingWindowAgentByRoutingService.Transferred = this.randomNumber();
        movingWindowAgentByRoutingService.Hold_Duration = this.randomNumber();
        movingWindowAgentByRoutingService.Blended_Active_Duration = this.randomNumber();
        movingWindowAgentByRoutingService.Alertting_Duration = this.randomNumber();
        movingWindowAgentByRoutingService.Active_Time = this.randomNumber();
        movingWindowAgentByRoutingService.Disconnects_From_Hold = this.randomNumber();
        movingWindowAgentByRoutingService.Holds = this.randomNumber();
        movingWindowAgentByRoutingService.Long_Engagements = this.randomNumber();
        movingWindowAgentByRoutingService.Short_Engagements = this.randomNumber();
        movingWindowAgentByRoutingService.Long_Wrap_Ups = this.randomNumber();
        movingWindowAgentByRoutingService.Short_Wrap_Ups = this.randomNumber();
        movingWindowAgentByRoutingService.Long_Holds = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_TO_AGENT = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_TO_SERVICE = this.randomNumber();
        movingWindowAgentByRoutingService.CONSULTS_INITIATED = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_INITIATED = this.randomNumber();
        movingWindowAgentByRoutingService.CONFERENCED_INITIATED = this.randomNumber();
        movingWindowAgentByRoutingService.CONSULTS_ACCEPTED = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_ACCEPTED = this.randomNumber();
        movingWindowAgentByRoutingService.CONFERENCED_ACCEPTED = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_INITIATED_TO_SERVICE = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_INITIATED_TO_AGENT = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_ACCEPTED_FROM_SERVICE = this.randomNumber();
        movingWindowAgentByRoutingService.TRANSFERRED_ACCEPTED_FROM_AGENT = this.randomNumber();
        movingWindowAgentByRoutingService.COACHED = this.randomNumber();
        movingWindowAgentByRoutingService.COACHING = this.randomNumber();
        movingWindowAgentByRoutingService.OBSERVED = this.randomNumber();
        movingWindowAgentByRoutingService.OBSERVING = this.randomNumber();
        movingWindowAgentByRoutingService.BARGED_IN = this.randomNumber();
        movingWindowAgentByRoutingService.BARGED_OUT = this.randomNumber();
        movingWindowAgentByRoutingService.CONSULT_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.CONSULTING_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.CONSULTED_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.COACHED_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.COACHING_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.OBSERVED_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.OBSERVING_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.BARGED_IN_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.BARGED_OUT_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.ACW_DURATION = this.randomNumber();
        movingWindowAgentByRoutingService.ACW = this.randomNumber();
        movingWindowAgentByRoutingService.ACW_EXTENDED = this.randomNumber();
        result = movingWindowAgentByRoutingService;
        break;
    }
    return result;
  }

  public randomNumber(): number {
    // return Math.floor(Math.random() * (max - min + 1)) + min;
    return Math.floor(Math.random() * (9000 - 1000 + 1)) + 1000;
  };

  public randomString(): string {
    let text = '';
    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

    for (let i = 0; i < 15; i++) {
      text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
  };
}

