import {Injectable} from '@angular/core';
import {environment} from 'environments/environment';
import {StartOfDayAgentByAccount} from 'app/services/fake-data/model/StartOfDayAgentByAccount';
import {StartOfDayAgent} from 'app/services/fake-data/model/StartOfDayAgent';
import {StartOfDayRoutingService} from 'app/services/fake-data/model/StartOfDayRoutingService';
import {StartOfDayAgentByRoutingService} from 'app/services/fake-data/model/StartOfDayAgentByRoutingService';
import {MovingWindowAgentByAccount} from 'app/services/fake-data/model/MovingWindowAgentByAccount';
import {MovingWindowAgent} from 'app/services/fake-data/model/MovingWindowAgent';
import {MovingWindowRoutingService} from 'app/services/fake-data/model/MovingWindowRoutingService';
import {MovingWindowAgentByRoutingService} from 'app/services/fake-data/model/MovingWindowAgentByRoutingService';

@Injectable()
export class FakeDataService {

  constructor() {
  }

  public realtimeData(type: string): MovingWindowAgent | MovingWindowAgentByAccount | MovingWindowAgentByRoutingService |
    MovingWindowRoutingService | StartOfDayAgent | StartOfDayAgentByAccount | StartOfDayAgentByRoutingService | StartOfDayRoutingService {
    let result: any;
    switch (type) {
      case environment.AGENTMEASURES:
        const startOfDayAgentByAccount: StartOfDayAgentByAccount = new StartOfDayAgentByAccount();
        startOfDayAgentByAccount.adHoc = this.randomString();
        startOfDayAgentByAccount.adHocDuration = this.randomString();
        startOfDayAgentByAccount.bargedIn = this.randomString();
        startOfDayAgentByAccount.bargedOut = this.randomString();
        startOfDayAgentByAccount.offered = this.randomString();
        startOfDayAgentByAccount.completed = this.randomString();
        startOfDayAgentByAccount.abandonedFromAlerting = this.randomString();
        startOfDayAgentByAccount.abandoned = this.randomString();
        startOfDayAgentByAccount.answered = this.randomString();
        startOfDayAgentByAccount.agentNotReadyTimeDuration = this.randomString();
        startOfDayAgentByAccount.holdDuration = this.randomString();
        startOfDayAgentByAccount.conferenced = this.randomString();
        startOfDayAgentByAccount.consults = this.randomString();
        startOfDayAgentByAccount.consultsAccepted = this.randomString();
        startOfDayAgentByAccount.consultsInitiated = this.randomString();
        startOfDayAgentByAccount.conferencedAccepted = this.randomString();
        startOfDayAgentByAccount.conferencedInitiated = this.randomString();
        startOfDayAgentByAccount.coached = this.randomString();
        startOfDayAgentByAccount.coaching = this.randomString();
        startOfDayAgentByAccount.bargedInDuration = this.randomString();
        startOfDayAgentByAccount.bargedOutDuration = this.randomString();
        startOfDayAgentByAccount.additionalWorkDuration = this.randomString();
        startOfDayAgentByAccount.additionalWork = this.randomString();
        startOfDayAgentByAccount.coachingDuration = this.randomString();
        startOfDayAgentByAccount.coachedDuration = this.randomString();
        startOfDayAgentByAccount.consultDuration = this.randomString();
        startOfDayAgentByAccount.consultingDuration = this.randomString();
        startOfDayAgentByAccount.observed = this.randomString();
        startOfDayAgentByAccount.observing = this.randomString();
        startOfDayAgentByAccount.observedDuration = this.randomString();
        startOfDayAgentByAccount.observingDuration = this.randomString();
        startOfDayAgentByAccount.disconnectsFromHold = this.randomString();
        startOfDayAgentByAccount.notAnswered = this.randomString();
        startOfDayAgentByAccount.transferred = this.randomString();
        startOfDayAgentByAccount.activeTimeDuration = this.randomString();
        startOfDayAgentByAccount.acw = this.randomString();
        startOfDayAgentByAccount.acwExtended = this.randomString();
        startOfDayAgentByAccount.blendedActiveDuration = this.randomString();
        startOfDayAgentByAccount.blendedAlertDuration = this.randomString();
        startOfDayAgentByAccount.idleTimeDuration = this.randomString();
        startOfDayAgentByAccount.acwDuration = this.randomString();
        startOfDayAgentByAccount.blendedActive = this.randomString();
        startOfDayAgentByAccount.blendedAlert = this.randomString();
        startOfDayAgentByAccount.agentLogonDuration = this.randomString();
        startOfDayAgentByAccount.alertDuration = this.randomString();
        startOfDayAgentByAccount.holds = this.randomString();
        startOfDayAgentByAccount.agentReady = this.randomString();
        startOfDayAgentByAccount.agentNotReady = this.randomString();
        startOfDayAgentByAccount.longHolds = this.randomString();
        startOfDayAgentByAccount.longEngagements = this.randomString();
        startOfDayAgentByAccount.shortEngagements = this.randomString();
        startOfDayAgentByAccount.longAcw = this.randomString();
        startOfDayAgentByAccount.shortAcw = this.randomString();
        startOfDayAgentByAccount.shortNotReady = this.randomString();
        startOfDayAgentByAccount.consultedDuration = this.randomString();
        startOfDayAgentByAccount.transferredToService = this.randomString();
        startOfDayAgentByAccount.transferredToAgent = this.randomString();
        startOfDayAgentByAccount.transferredInitiated = this.randomString();
        startOfDayAgentByAccount.transferredAccepted = this.randomString();
        startOfDayAgentByAccount.transferredInitiatedToService = this.randomString();
        startOfDayAgentByAccount.transferredInitiatedToAgent = this.randomString();
        startOfDayAgentByAccount.transferredAcceptedFromService = this.randomString();
        startOfDayAgentByAccount.transferredAcceptedFromAgent = this.randomString();
        startOfDayAgentByAccount.active = this.randomString();
        startOfDayAgentByAccount.accountAddress = this.randomString();
        startOfDayAgentByAccount.nrReasonCode = this.randomString();
        startOfDayAgentByAccount.nrReasonCodeName = this.randomString();
        startOfDayAgentByAccount.channel = this.randomString();
        startOfDayAgentByAccount.provider = this.randomString();
        startOfDayAgentByAccount.agentState = this.randomString();
        startOfDayAgentByAccount.agentId = this.randomString();
        startOfDayAgentByAccount.agentFirstName = this.randomString();
        startOfDayAgentByAccount.agentLastName = this.randomString();
        startOfDayAgentByAccount.agentDisplayName = this.randomString();
        startOfDayAgentByAccount.supervisorId = this.randomString();
        startOfDayAgentByAccount.supervisorLastName = this.randomString();
        startOfDayAgentByAccount.supervisorFirstName = this.randomString();
        startOfDayAgentByAccount.workState = this.randomString();
        startOfDayAgentByAccount.loginTimeStamp = this.randomString();
        startOfDayAgentByAccount.agentLogoutTimeStamp = this.randomString();
        startOfDayAgentByAccount.lastStateChangeTimestamp = this.randomString();
        startOfDayAgentByAccount.lastStateReasonTimestamp = this.randomString();
        startOfDayAgentByAccount.lastWorkCodeChangeTimestamp = this.randomString();
        startOfDayAgentByAccount.activeWorkCount = this.randomString();
        startOfDayAgentByAccount.workLimit = this.randomString();

        result = startOfDayAgentByAccount;
        break;

      case environment.AGENTBYACCOUNTMEASURES :
        const startOfDayAgent: StartOfDayAgent = new StartOfDayAgent();
        startOfDayAgent.accountAddress = this.randomString();
        startOfDayAgent.channel = this.randomString();
        startOfDayAgent.provider = this.randomString();
        startOfDayAgent.agentId = this.randomString();
        startOfDayAgent.agentFirstName = this.randomString();
        startOfDayAgent.agentLastName = this.randomString();
        startOfDayAgent.agentDisplayName = this.randomString();
        startOfDayAgent.supervisorId = this.randomString();
        startOfDayAgent.supervisorLastName = this.randomString();
        startOfDayAgent.supervisorFirstName = this.randomString();
        startOfDayAgent.accountState = this.randomString();
        startOfDayAgent.loginTimeStamp = this.randomString();
        startOfDayAgent.accountLogoutTimeStamp = this.randomString();
        startOfDayAgent.lastStateChangeTimestamp = this.randomString();
        startOfDayAgent.lastStateReasonTimestamp = this.randomString();
        startOfDayAgent.routingAttributeService = this.randomString();
        startOfDayAgent.routingServiceCategory = this.randomString();
        startOfDayAgent.activeWorkCount = this.randomString();
        startOfDayAgent.workLimit = this.randomString();
        startOfDayAgent.active = this.randomString();
        startOfDayAgent.adHoc = this.randomString();
        startOfDayAgent.adHocDuration = this.randomString();
        startOfDayAgent.bargedIn = this.randomString();
        startOfDayAgent.bargedOut = this.randomString();
        startOfDayAgent.offered = this.randomString();
        startOfDayAgent.completed = this.randomString();
        startOfDayAgent.abandonedFromAlerting = this.randomString();
        startOfDayAgent.abandoned = this.randomString();
        startOfDayAgent.answered = this.randomString();
        startOfDayAgent.accountNotReadyTimeDuration = this.randomString();
        startOfDayAgent.holdDuration = this.randomString();
        startOfDayAgent.conferenced = this.randomString();
        startOfDayAgent.consults = this.randomString();
        startOfDayAgent.consultsAccepted = this.randomString();
        startOfDayAgent.consultsInitiated = this.randomString();
        startOfDayAgent.conferencedAccepted = this.randomString();
        startOfDayAgent.conferencedInitiated = this.randomString();
        startOfDayAgent.coached = this.randomString();
        startOfDayAgent.coaching = this.randomString();
        startOfDayAgent.bargedInDuration = this.randomString();
        startOfDayAgent.bargedOutDuration = this.randomString();
        startOfDayAgent.coachingDuration = this.randomString();
        startOfDayAgent.coachedDuration = this.randomString();
        startOfDayAgent.consultDuration = this.randomString();
        startOfDayAgent.consultingDuration = this.randomString();
        startOfDayAgent.observed = this.randomString();
        startOfDayAgent.observing = this.randomString();
        startOfDayAgent.observedDuration = this.randomString();
        startOfDayAgent.observingDuration = this.randomString();
        startOfDayAgent.disconnectsFromHold = this.randomString();
        startOfDayAgent.notAnswered = this.randomString();
        startOfDayAgent.transferred = this.randomString();
        startOfDayAgent.activeTimeDuration = this.randomString();
        startOfDayAgent.acw = this.randomString();
        startOfDayAgent.acwExtended = this.randomString();
        startOfDayAgent.blendedActiveDuration = this.randomString();
        startOfDayAgent.acwDuration = this.randomString();
        startOfDayAgent.blendedActive = this.randomString();
        startOfDayAgent.accountLogonDuration = this.randomString();
        startOfDayAgent.alertDuration = this.randomString();
        startOfDayAgent.holds = this.randomString();
        startOfDayAgent.accountReady = this.randomString();
        startOfDayAgent.accountNotReady = this.randomString();
        startOfDayAgent.longHolds = this.randomString();
        startOfDayAgent.longEngagements = this.randomString();
        startOfDayAgent.shortEngagements = this.randomString();
        startOfDayAgent.longAcw = this.randomString();
        startOfDayAgent.shortAcw = this.randomString();
        startOfDayAgent.shortNotReady = this.randomString();
        startOfDayAgent.consultedDuration = this.randomString();
        startOfDayAgent.transferredToService = this.randomString();
        startOfDayAgent.transferredToAgent = this.randomString();
        startOfDayAgent.transferredInitiated = this.randomString();
        startOfDayAgent.transferredAccepted = this.randomString();
        startOfDayAgent.transferredInitiatedToService = this.randomString();
        startOfDayAgent.transferredInitiatedToAgent = this.randomString();
        startOfDayAgent.transferredAcceptedFromService = this.randomString();
        startOfDayAgent.transferredAcceptedFromAgent = this.randomString();

        result = startOfDayAgent;
        break;

      case environment.ROUTINGSERVICEMEASURES:
        const startOfDayRoutingService: StartOfDayRoutingService = new StartOfDayRoutingService();
        startOfDayRoutingService.bargedIn = this.randomString();
        startOfDayRoutingService.bargedOut = this.randomString();
        startOfDayRoutingService.offered = this.randomString();
        startOfDayRoutingService.completed = this.randomString();
        startOfDayRoutingService.abandonedFromQueue = this.randomString();
        startOfDayRoutingService.abandonedFromAlerting = this.randomString();
        startOfDayRoutingService.abandoned = this.randomString();
        startOfDayRoutingService.answered = this.randomString();
        startOfDayRoutingService.holdDuration = this.randomString();
        startOfDayRoutingService.conferenced = this.randomString();
        startOfDayRoutingService.consults = this.randomString();
        startOfDayRoutingService.consultsAccepted = this.randomString();
        startOfDayRoutingService.consultsInitiated = this.randomString();
        startOfDayRoutingService.conferencedAccepted = this.randomString();
        startOfDayRoutingService.conferencedInitiated = this.randomString();
        startOfDayRoutingService.coached = this.randomString();
        startOfDayRoutingService.coaching = this.randomString();
        startOfDayRoutingService.bargedInDuration = this.randomString();
        startOfDayRoutingService.bargedOutDuration = this.randomString();
        startOfDayRoutingService.coachingDuration = this.randomString();
        startOfDayRoutingService.coachedDuration = this.randomString();
        startOfDayRoutingService.consultDuration = this.randomString();
        startOfDayRoutingService.consultingDuration = this.randomString();
        startOfDayRoutingService.observed = this.randomString();
        startOfDayRoutingService.observing = this.randomString();
        startOfDayRoutingService.observedDuration = this.randomString();
        startOfDayRoutingService.observingDuration = this.randomString();
        startOfDayRoutingService.notAnswered = this.randomString();
        startOfDayRoutingService.transferred = this.randomString();
        startOfDayRoutingService.activeTimeDuration = this.randomString();
        startOfDayRoutingService.acw = this.randomString();
        startOfDayRoutingService.acwExtended = this.randomString();
        startOfDayRoutingService.abandonTimeDuration = this.randomString();
        startOfDayRoutingService.holds = this.randomString();
        startOfDayRoutingService.totalDuration = this.randomString();
        startOfDayRoutingService.ringTimeDuration = this.randomString();
        startOfDayRoutingService.totalWaitTime = this.randomString();
        startOfDayRoutingService.answeredAfterThreshold = this.randomString();
        startOfDayRoutingService.abandonedAfterThreshold = this.randomString();
        startOfDayRoutingService.longHolds = this.randomString();
        startOfDayRoutingService.longEngagements = this.randomString();
        startOfDayRoutingService.shortEngagements = this.randomString();
        startOfDayRoutingService.longAcw = this.randomString();
        startOfDayRoutingService.shortAcw = this.randomString();
        startOfDayRoutingService.consultedDuration = this.randomString();
        startOfDayRoutingService.transferredToService = this.randomString();
        startOfDayRoutingService.transferredToAgent = this.randomString();
        startOfDayRoutingService.transferredInitiated = this.randomString();
        startOfDayRoutingService.transferredAccepted = this.randomString();
        startOfDayRoutingService.transferredInitiatedToService = this.randomString();
        startOfDayRoutingService.transferredInitiatedToAgent = this.randomString();
        startOfDayRoutingService.transferredAcceptedFromService = this.randomString();
        startOfDayRoutingService.transferredAcceptedFromAgent = this.randomString();
        startOfDayRoutingService.alerting = this.randomString();
        startOfDayRoutingService.heldContacts = this.randomString();
        startOfDayRoutingService.contactsAtAgent = this.randomString();
        startOfDayRoutingService.active = this.randomString();
        startOfDayRoutingService.contactsWaiting = this.randomString();
        startOfDayRoutingService.channel = this.randomString();
        startOfDayRoutingService.provider = this.randomString();
        startOfDayRoutingService.routingAttributeService = this.randomString();
        startOfDayRoutingService.serviceDisplayName = this.randomString();
        startOfDayRoutingService.oldestContactWaiting = this.randomString();
        startOfDayRoutingService.staffed = this.randomString();
        startOfDayRoutingService.available = this.randomString();
        startOfDayRoutingService.expectedWaitTime = this.randomString();

        result = startOfDayRoutingService;
        break;

      case environment.AGENTBYROUTINGSERVICEMEASURES :
        const startOfDayAgentByRoutingService: StartOfDayAgentByRoutingService = new StartOfDayAgentByRoutingService();
        startOfDayAgentByRoutingService.bargedIn = this.randomString();
        startOfDayAgentByRoutingService.bargedOut = this.randomString();
        startOfDayAgentByRoutingService.offered = this.randomString();
        startOfDayAgentByRoutingService.completed = this.randomString();
        startOfDayAgentByRoutingService.abandonedFromAlerting = this.randomString();
        startOfDayAgentByRoutingService.abandoned = this.randomString();
        startOfDayAgentByRoutingService.answered = this.randomString();
        startOfDayAgentByRoutingService.holdDuration = this.randomString();
        startOfDayAgentByRoutingService.conferenced = this.randomString();
        startOfDayAgentByRoutingService.consults = this.randomString();
        startOfDayAgentByRoutingService.consultsAccepted = this.randomString();
        startOfDayAgentByRoutingService.consultsInitiated = this.randomString();
        startOfDayAgentByRoutingService.conferencedAccepted = this.randomString();
        startOfDayAgentByRoutingService.conferencedInitiated = this.randomString();
        startOfDayAgentByRoutingService.coached = this.randomString();
        startOfDayAgentByRoutingService.coaching = this.randomString();
        startOfDayAgentByRoutingService.bargedInDuration = this.randomString();
        startOfDayAgentByRoutingService.bargedOutDuration = this.randomString();
        startOfDayAgentByRoutingService.coachingDuration = this.randomString();
        startOfDayAgentByRoutingService.coachedDuration = this.randomString();
        startOfDayAgentByRoutingService.consultDuration = this.randomString();
        startOfDayAgentByRoutingService.consultingDuration = this.randomString();
        startOfDayAgentByRoutingService.observed = this.randomString();
        startOfDayAgentByRoutingService.observing = this.randomString();
        startOfDayAgentByRoutingService.observedDuration = this.randomString();
        startOfDayAgentByRoutingService.observingDuration = this.randomString();
        startOfDayAgentByRoutingService.disconnectsFromHold = this.randomString();
        startOfDayAgentByRoutingService.notAnswered = this.randomString();
        startOfDayAgentByRoutingService.transferred = this.randomString();
        startOfDayAgentByRoutingService.activeTimeDuration = this.randomString();
        startOfDayAgentByRoutingService.acw = this.randomString();
        startOfDayAgentByRoutingService.acwExtended = this.randomString();
        startOfDayAgentByRoutingService.blendedActiveDuration = this.randomString();
        startOfDayAgentByRoutingService.acwDuration = this.randomString();
        startOfDayAgentByRoutingService.blendedActive = this.randomString();
        startOfDayAgentByRoutingService.alertDuration = this.randomString();
        startOfDayAgentByRoutingService.holds = this.randomString();
        startOfDayAgentByRoutingService.longHolds = this.randomString();
        startOfDayAgentByRoutingService.longEngagements = this.randomString();
        startOfDayAgentByRoutingService.shortEngagements = this.randomString();
        startOfDayAgentByRoutingService.longAcw = this.randomString();
        startOfDayAgentByRoutingService.shortAcw = this.randomString();
        startOfDayAgentByRoutingService.consultedDuration = this.randomString();
        startOfDayAgentByRoutingService.transferredToService = this.randomString();
        startOfDayAgentByRoutingService.transferredToAgent = this.randomString();
        startOfDayAgentByRoutingService.transferredInitiated = this.randomString();
        startOfDayAgentByRoutingService.transferredAccepted = this.randomString();
        startOfDayAgentByRoutingService.transferredInitiatedToService = this.randomString();
        startOfDayAgentByRoutingService.transferredInitiatedToAgent = this.randomString();
        startOfDayAgentByRoutingService.transferredAcceptedFromService = this.randomString();
        startOfDayAgentByRoutingService.transferredAcceptedFromAgent = this.randomString();
        startOfDayAgentByRoutingService.active = this.randomString();
        startOfDayAgentByRoutingService.channel = this.randomString();
        startOfDayAgentByRoutingService.provider = this.randomString();
        startOfDayAgentByRoutingService.agentId = this.randomString();
        startOfDayAgentByRoutingService.agentFirstName = this.randomString();
        startOfDayAgentByRoutingService.agentLastName = this.randomString();
        startOfDayAgentByRoutingService.agentDisplayName = this.randomString();
        startOfDayAgentByRoutingService.supervisorId = this.randomString();
        startOfDayAgentByRoutingService.supervisorLastName = this.randomString();
        startOfDayAgentByRoutingService.supervisorFirstName = this.randomString();
        startOfDayAgentByRoutingService.routingAttributeService = this.randomString();
        startOfDayAgentByRoutingService.serviceDisplayName = this.randomString();

        result = startOfDayAgentByRoutingService;
        break;

      case environment.AGENTMEASURESMOVINGWINDOW :
        const movingWindowAgentByAccount: MovingWindowAgentByAccount = new MovingWindowAgentByAccount();
        movingWindowAgentByAccount.adHoc = this.randomString();
        movingWindowAgentByAccount.adHocDuration = this.randomString();
        movingWindowAgentByAccount.bargedIn = this.randomString();
        movingWindowAgentByAccount.bargedOut = this.randomString();
        movingWindowAgentByAccount.offered = this.randomString();
        movingWindowAgentByAccount.completed = this.randomString();
        movingWindowAgentByAccount.abandonedFromAlerting = this.randomString();
        movingWindowAgentByAccount.abandoned = this.randomString();
        movingWindowAgentByAccount.answered = this.randomString();
        movingWindowAgentByAccount.agentNotReadyTimeDuration = this.randomString();
        movingWindowAgentByAccount.holdDuration = this.randomString();
        movingWindowAgentByAccount.conferenced = this.randomString();
        movingWindowAgentByAccount.consults = this.randomString();
        movingWindowAgentByAccount.consultsAccepted = this.randomString();
        movingWindowAgentByAccount.consultsInitiated = this.randomString();
        movingWindowAgentByAccount.conferencedAccepted = this.randomString();
        movingWindowAgentByAccount.conferencedInitiated = this.randomString();
        movingWindowAgentByAccount.coached = this.randomString();
        movingWindowAgentByAccount.coaching = this.randomString();
        movingWindowAgentByAccount.bargedInDuration = this.randomString();
        movingWindowAgentByAccount.bargedOutDuration = this.randomString();
        movingWindowAgentByAccount.additionalWorkDuration = this.randomString();
        movingWindowAgentByAccount.additionalWork = this.randomString();
        movingWindowAgentByAccount.coachingDuration = this.randomString();
        movingWindowAgentByAccount.coachedDuration = this.randomString();
        movingWindowAgentByAccount.consultDuration = this.randomString();
        movingWindowAgentByAccount.consultingDuration = this.randomString();
        movingWindowAgentByAccount.observed = this.randomString();
        movingWindowAgentByAccount.observing = this.randomString();
        movingWindowAgentByAccount.observedDuration = this.randomString();
        movingWindowAgentByAccount.observingDuration = this.randomString();
        movingWindowAgentByAccount.disconnectsFromHold = this.randomString();
        movingWindowAgentByAccount.notAnswered = this.randomString();
        movingWindowAgentByAccount.transferred = this.randomString();
        movingWindowAgentByAccount.activeTimeDuration = this.randomString();
        movingWindowAgentByAccount.acw = this.randomString();
        movingWindowAgentByAccount.acwExtended = this.randomString();
        movingWindowAgentByAccount.blendedActiveDuration = this.randomString();
        movingWindowAgentByAccount.blendedAlertDuration = this.randomString();
        movingWindowAgentByAccount.idleTimeDuration = this.randomString();
        movingWindowAgentByAccount.acwDuration = this.randomString();
        movingWindowAgentByAccount.blendedActive = this.randomString();
        movingWindowAgentByAccount.blendedAlert = this.randomString();
        movingWindowAgentByAccount.agentLogonDuration = this.randomString();
        movingWindowAgentByAccount.alertDuration = this.randomString();
        movingWindowAgentByAccount.holds = this.randomString();
        movingWindowAgentByAccount.agentReady = this.randomString();
        movingWindowAgentByAccount.agentNotReady = this.randomString();
        movingWindowAgentByAccount.longHolds = this.randomString();
        movingWindowAgentByAccount.longEngagements = this.randomString();
        movingWindowAgentByAccount.shortEngagements = this.randomString();
        movingWindowAgentByAccount.longAcw = this.randomString();
        movingWindowAgentByAccount.shortAcw = this.randomString();
        movingWindowAgentByAccount.shortNotReady = this.randomString();
        movingWindowAgentByAccount.consultedDuration = this.randomString();
        movingWindowAgentByAccount.transferredToService = this.randomString();
        movingWindowAgentByAccount.transferredToAgent = this.randomString();
        movingWindowAgentByAccount.transferredInitiated = this.randomString();
        movingWindowAgentByAccount.transferredAccepted = this.randomString();
        movingWindowAgentByAccount.transferredInitiatedToService = this.randomString();
        movingWindowAgentByAccount.transferredInitiatedToAgent = this.randomString();
        movingWindowAgentByAccount.transferredAcceptedFromService = this.randomString();
        movingWindowAgentByAccount.transferredAcceptedFromAgent = this.randomString();
        movingWindowAgentByAccount.active = this.randomString();
        movingWindowAgentByAccount.accountAddress = this.randomString();
        movingWindowAgentByAccount.nrReasonCode = this.randomString();
        movingWindowAgentByAccount.nrReasonCodeName = this.randomString();
        movingWindowAgentByAccount.channel = this.randomString();
        movingWindowAgentByAccount.provider = this.randomString();
        movingWindowAgentByAccount.agentState = this.randomString();
        movingWindowAgentByAccount.agentId = this.randomString();
        movingWindowAgentByAccount.agentFirstName = this.randomString();
        movingWindowAgentByAccount.agentLastName = this.randomString();
        movingWindowAgentByAccount.agentDisplayName = this.randomString();
        movingWindowAgentByAccount.supervisorId = this.randomString();
        movingWindowAgentByAccount.supervisorLastName = this.randomString();
        movingWindowAgentByAccount.supervisorFirstName = this.randomString();
        movingWindowAgentByAccount.workState = this.randomString();
        movingWindowAgentByAccount.loginTimeStamp = this.randomString();
        movingWindowAgentByAccount.agentLogoutTimeStamp = this.randomString();
        movingWindowAgentByAccount.lastStateChangeTimestamp = this.randomString();
        movingWindowAgentByAccount.lastStateReasonTimestamp = this.randomString();
        movingWindowAgentByAccount.lastWorkCodeChangeTimestamp = this.randomString();
        movingWindowAgentByAccount.activeWorkCount = this.randomString();
        movingWindowAgentByAccount.workLimit = this.randomString();

        result = movingWindowAgentByAccount;
        break;

      case environment.AGENTBYACCOUNTMEASURSMOVINGWINDOW :
        const movingWindowAgent: MovingWindowAgent = new MovingWindowAgent();
        movingWindowAgent.accountAddress = this.randomString();
        movingWindowAgent.channel = this.randomString();
        movingWindowAgent.provider = this.randomString();
        movingWindowAgent.agentId = this.randomString();
        movingWindowAgent.agentFirstName = this.randomString();
        movingWindowAgent.agentLastName = this.randomString();
        movingWindowAgent.agentDisplayName = this.randomString();
        movingWindowAgent.supervisorId = this.randomString();
        movingWindowAgent.supervisorLastName = this.randomString();
        movingWindowAgent.supervisorFirstName = this.randomString();
        movingWindowAgent.accountState = this.randomString();
        movingWindowAgent.loginTimeStamp = this.randomString();
        movingWindowAgent.accountLogoutTimeStamp = this.randomString();
        movingWindowAgent.lastStateChangeTimestamp = this.randomString();
        movingWindowAgent.lastStateReasonTimestamp = this.randomString();
        movingWindowAgent.routingAttributeService = this.randomString();
        movingWindowAgent.routingServiceCategory = this.randomString();
        movingWindowAgent.activeWorkCount = this.randomString();
        movingWindowAgent.workLimit = this.randomString();
        movingWindowAgent.active = this.randomString();
        movingWindowAgent.adHoc = this.randomString();
        movingWindowAgent.adHocDuration = this.randomString();
        movingWindowAgent.bargedIn = this.randomString();
        movingWindowAgent.bargedOut = this.randomString();
        movingWindowAgent.offered = this.randomString();
        movingWindowAgent.completed = this.randomString();
        movingWindowAgent.abandonedFromAlerting = this.randomString();
        movingWindowAgent.abandoned = this.randomString();
        movingWindowAgent.answered = this.randomString();
        movingWindowAgent.accountNotReadyTimeDuration = this.randomString();
        movingWindowAgent.holdDuration = this.randomString();
        movingWindowAgent.conferenced = this.randomString();
        movingWindowAgent.consults = this.randomString();
        movingWindowAgent.consultsAccepted = this.randomString();
        movingWindowAgent.consultsInitiated = this.randomString();
        movingWindowAgent.conferencedAccepted = this.randomString();
        movingWindowAgent.conferencedInitiated = this.randomString();
        movingWindowAgent.coached = this.randomString();
        movingWindowAgent.coaching = this.randomString();
        movingWindowAgent.bargedInDuration = this.randomString();
        movingWindowAgent.bargedOutDuration = this.randomString();
        movingWindowAgent.coachingDuration = this.randomString();
        movingWindowAgent.coachedDuration = this.randomString();
        movingWindowAgent.consultDuration = this.randomString();
        movingWindowAgent.consultingDuration = this.randomString();
        movingWindowAgent.observed = this.randomString();
        movingWindowAgent.observing = this.randomString();
        movingWindowAgent.observedDuration = this.randomString();
        movingWindowAgent.observingDuration = this.randomString();
        movingWindowAgent.disconnectsFromHold = this.randomString();
        movingWindowAgent.notAnswered = this.randomString();
        movingWindowAgent.transferred = this.randomString();
        movingWindowAgent.activeTimeDuration = this.randomString();
        movingWindowAgent.acw = this.randomString();
        movingWindowAgent.acwExtended = this.randomString();
        movingWindowAgent.blendedActiveDuration = this.randomString();
        movingWindowAgent.acwDuration = this.randomString();
        movingWindowAgent.blendedActive = this.randomString();
        movingWindowAgent.accountLogonDuration = this.randomString();
        movingWindowAgent.alertDuration = this.randomString();
        movingWindowAgent.holds = this.randomString();
        movingWindowAgent.accountReady = this.randomString();
        movingWindowAgent.accountNotReady = this.randomString();
        movingWindowAgent.longHolds = this.randomString();
        movingWindowAgent.longEngagements = this.randomString();
        movingWindowAgent.shortEngagements = this.randomString();
        movingWindowAgent.longAcw = this.randomString();
        movingWindowAgent.shortAcw = this.randomString();
        movingWindowAgent.shortNotReady = this.randomString();
        movingWindowAgent.consultedDuration = this.randomString();
        movingWindowAgent.transferredToService = this.randomString();
        movingWindowAgent.transferredToAgent = this.randomString();
        movingWindowAgent.transferredInitiated = this.randomString();
        movingWindowAgent.transferredAccepted = this.randomString();
        movingWindowAgent.transferredInitiatedToService = this.randomString();
        movingWindowAgent.transferredInitiatedToAgent = this.randomString();
        movingWindowAgent.transferredAcceptedFromService = this.randomString();
        movingWindowAgent.transferredAcceptedFromAgent = this.randomString();

        result = movingWindowAgent;
        break;

      case environment.ROUTINGSERVICEMEASURESMOVINGWINDOW :
        const movingWindowRoutingService: MovingWindowRoutingService = new MovingWindowRoutingService();
        movingWindowRoutingService.bargedIn = this.randomString();
        movingWindowRoutingService.bargedOut = this.randomString();
        movingWindowRoutingService.offered = this.randomString();
        movingWindowRoutingService.completed = this.randomString();
        movingWindowRoutingService.abandonedFromQueue = this.randomString();
        movingWindowRoutingService.abandonedFromAlerting = this.randomString();
        movingWindowRoutingService.abandoned = this.randomString();
        movingWindowRoutingService.answered = this.randomString();
        movingWindowRoutingService.holdDuration = this.randomString();
        movingWindowRoutingService.conferenced = this.randomString();
        movingWindowRoutingService.consults = this.randomString();
        movingWindowRoutingService.consultsAccepted = this.randomString();
        movingWindowRoutingService.consultsInitiated = this.randomString();
        movingWindowRoutingService.conferencedAccepted = this.randomString();
        movingWindowRoutingService.conferencedInitiated = this.randomString();
        movingWindowRoutingService.coached = this.randomString();
        movingWindowRoutingService.coaching = this.randomString();
        movingWindowRoutingService.bargedInDuration = this.randomString();
        movingWindowRoutingService.bargedOutDuration = this.randomString();
        movingWindowRoutingService.coachingDuration = this.randomString();
        movingWindowRoutingService.coachedDuration = this.randomString();
        movingWindowRoutingService.consultDuration = this.randomString();
        movingWindowRoutingService.consultingDuration = this.randomString();
        movingWindowRoutingService.observed = this.randomString();
        movingWindowRoutingService.observing = this.randomString();
        movingWindowRoutingService.observedDuration = this.randomString();
        movingWindowRoutingService.observingDuration = this.randomString();
        movingWindowRoutingService.notAnswered = this.randomString();
        movingWindowRoutingService.transferred = this.randomString();
        movingWindowRoutingService.activeTimeDuration = this.randomString();
        movingWindowRoutingService.acw = this.randomString();
        movingWindowRoutingService.acwExtended = this.randomString();
        movingWindowRoutingService.abandonTimeDuration = this.randomString();
        movingWindowRoutingService.holds = this.randomString();
        movingWindowRoutingService.totalDuration = this.randomString();
        movingWindowRoutingService.ringTimeDuration = this.randomString();
        movingWindowRoutingService.totalWaitTime = this.randomString();
        movingWindowRoutingService.answeredAfterThreshold = this.randomString();
        movingWindowRoutingService.abandonedAfterThreshold = this.randomString();
        movingWindowRoutingService.longHolds = this.randomString();
        movingWindowRoutingService.longEngagements = this.randomString();
        movingWindowRoutingService.shortEngagements = this.randomString();
        movingWindowRoutingService.longAcw = this.randomString();
        movingWindowRoutingService.shortAcw = this.randomString();
        movingWindowRoutingService.consultedDuration = this.randomString();
        movingWindowRoutingService.transferredToService = this.randomString();
        movingWindowRoutingService.transferredToAgent = this.randomString();
        movingWindowRoutingService.transferredInitiated = this.randomString();
        movingWindowRoutingService.transferredAccepted = this.randomString();
        movingWindowRoutingService.transferredInitiatedToService = this.randomString();
        movingWindowRoutingService.transferredInitiatedToAgent = this.randomString();
        movingWindowRoutingService.transferredAcceptedFromService = this.randomString();
        movingWindowRoutingService.transferredAcceptedFromAgent = this.randomString();
        movingWindowRoutingService.alerting = this.randomString();
        movingWindowRoutingService.heldContacts = this.randomString();
        movingWindowRoutingService.contactsAtAgent = this.randomString();
        movingWindowRoutingService.active = this.randomString();
        movingWindowRoutingService.contactsWaiting = this.randomString();
        movingWindowRoutingService.channel = this.randomString();
        movingWindowRoutingService.provider = this.randomString();
        movingWindowRoutingService.routingAttributeService = this.randomString();
        movingWindowRoutingService.serviceDisplayName = this.randomString();
        movingWindowRoutingService.oldestContactWaiting = this.randomString();
        movingWindowRoutingService.staffed = this.randomString();
        movingWindowRoutingService.available = this.randomString();
        movingWindowRoutingService.expectedWaitTime = this.randomString();

        result = movingWindowRoutingService;
        break;

      case environment.AGENTBYROUTINGSERVICEMEASURESMOVINGWINDOW :
        const movingWindowAgentByRoutingService: MovingWindowAgentByRoutingService = new MovingWindowAgentByRoutingService();
        movingWindowAgentByRoutingService.bargedIn = this.randomString();
        movingWindowAgentByRoutingService.bargedOut = this.randomString();
        movingWindowAgentByRoutingService.offered = this.randomString();
        movingWindowAgentByRoutingService.completed = this.randomString();
        movingWindowAgentByRoutingService.abandonedFromAlerting = this.randomString();
        movingWindowAgentByRoutingService.abandoned = this.randomString();
        movingWindowAgentByRoutingService.answered = this.randomString();
        movingWindowAgentByRoutingService.holdDuration = this.randomString();
        movingWindowAgentByRoutingService.conferenced = this.randomString();
        movingWindowAgentByRoutingService.consults = this.randomString();
        movingWindowAgentByRoutingService.consultsAccepted = this.randomString();
        movingWindowAgentByRoutingService.consultsInitiated = this.randomString();
        movingWindowAgentByRoutingService.conferencedAccepted = this.randomString();
        movingWindowAgentByRoutingService.conferencedInitiated = this.randomString();
        movingWindowAgentByRoutingService.coached = this.randomString();
        movingWindowAgentByRoutingService.coaching = this.randomString();
        movingWindowAgentByRoutingService.bargedInDuration = this.randomString();
        movingWindowAgentByRoutingService.bargedOutDuration = this.randomString();
        movingWindowAgentByRoutingService.coachingDuration = this.randomString();
        movingWindowAgentByRoutingService.coachedDuration = this.randomString();
        movingWindowAgentByRoutingService.consultDuration = this.randomString();
        movingWindowAgentByRoutingService.consultingDuration = this.randomString();
        movingWindowAgentByRoutingService.observed = this.randomString();
        movingWindowAgentByRoutingService.observing = this.randomString();
        movingWindowAgentByRoutingService.observedDuration = this.randomString();
        movingWindowAgentByRoutingService.observingDuration = this.randomString();
        movingWindowAgentByRoutingService.disconnectsFromHold = this.randomString();
        movingWindowAgentByRoutingService.notAnswered = this.randomString();
        movingWindowAgentByRoutingService.transferred = this.randomString();
        movingWindowAgentByRoutingService.activeTimeDuration = this.randomString();
        movingWindowAgentByRoutingService.acw = this.randomString();
        movingWindowAgentByRoutingService.acwExtended = this.randomString();
        movingWindowAgentByRoutingService.blendedActiveDuration = this.randomString();
        movingWindowAgentByRoutingService.acwDuration = this.randomString();
        movingWindowAgentByRoutingService.blendedActive = this.randomString();
        movingWindowAgentByRoutingService.alertDuration = this.randomString();
        movingWindowAgentByRoutingService.holds = this.randomString();
        movingWindowAgentByRoutingService.longHolds = this.randomString();
        movingWindowAgentByRoutingService.longEngagements = this.randomString();
        movingWindowAgentByRoutingService.shortEngagements = this.randomString();
        movingWindowAgentByRoutingService.longAcw = this.randomString();
        movingWindowAgentByRoutingService.shortAcw = this.randomString();
        movingWindowAgentByRoutingService.consultedDuration = this.randomString();
        movingWindowAgentByRoutingService.transferredToService = this.randomString();
        movingWindowAgentByRoutingService.transferredToAgent = this.randomString();
        movingWindowAgentByRoutingService.transferredInitiated = this.randomString();
        movingWindowAgentByRoutingService.transferredAccepted = this.randomString();
        movingWindowAgentByRoutingService.transferredInitiatedToService = this.randomString();
        movingWindowAgentByRoutingService.transferredInitiatedToAgent = this.randomString();
        movingWindowAgentByRoutingService.transferredAcceptedFromService = this.randomString();
        movingWindowAgentByRoutingService.transferredAcceptedFromAgent = this.randomString();
        movingWindowAgentByRoutingService.active = this.randomString();
        movingWindowAgentByRoutingService.channel = this.randomString();
        movingWindowAgentByRoutingService.provider = this.randomString();
        movingWindowAgentByRoutingService.agentId = this.randomString();
        movingWindowAgentByRoutingService.agentFirstName = this.randomString();
        movingWindowAgentByRoutingService.agentLastName = this.randomString();
        movingWindowAgentByRoutingService.agentDisplayName = this.randomString();
        movingWindowAgentByRoutingService.supervisorId = this.randomString();
        movingWindowAgentByRoutingService.supervisorLastName = this.randomString();
        movingWindowAgentByRoutingService.supervisorFirstName = this.randomString();
        movingWindowAgentByRoutingService.routingAttributeService = this.randomString();
        movingWindowAgentByRoutingService.serviceDisplayName = this.randomString();

        result = movingWindowAgentByRoutingService;
        break;
    }
    return result;
  }

  public randomNumber(): number {
    // return Math.floor(Math.random() * (max - min + 1)) + min;
    return Math.floor(Math.random() * (9000 - 1000 + 1)) + 1000;
  };

  public randomString(): string {
    let text = '';
    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

    for (let i = 0; i < 15; i++) {
      text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
  };
}

